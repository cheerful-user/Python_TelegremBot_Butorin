#
import re # –º–æ–¥—É–ª—å –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–æ–∏—Å–∫–æ–º –≤—Ö–æ–∂–¥–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤
import telegram
from telegram import Update
from telegram.ext import Updater, CommandHandler, MessageHandler, Filters
import telebot
from telebot import types
from secrets import TOKEN
TOKEN
bot=telebot.TeleBot(TOKEN) # —Ç–æ–∫–µ–Ω –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º —Ñ–∞–π–ª–µ
import os.path

#—Å–æ–∑–¥–∞–¥–∏–º –∏ —Ä–∞—Å–ø–æ–ª–æ–∂–∏–º –∫–Ω–æ–ø–∫–∏
@bot.message_handler(commands=['start'])
def start(message):
    markup = types.InlineKeyboardMarkup()
    bot1 = types.InlineKeyboardButton("1", callback_data='bt1')
    bot2 = types.InlineKeyboardButton("2", callback_data='bt2')
    bot3 = types.InlineKeyboardButton("3", callback_data='bt3')
    bot4 = types.InlineKeyboardButton("4", callback_data='bt4')
    bot5 = types.InlineKeyboardButton("5", callback_data='bt5')
    markup.row(bot1, bot2, bot3, bot4, bot5)
    markup.add(types.InlineKeyboardButton('help', callback_data='hlp'))
    bot.send_message(message.chat.id,f'<i>–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é –í–∞—Å, <b>{message.from_user.first_name}</b>, –≤ –Ω–∞—à–µ–º –¢–µ–ª–µ–≥—Ä–∞–º–º –±–æ—Ç–µ! \n–ü–µ—Ä–µ–¥ –í–∞–º–∏'
                                   f' –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –¥–µ–π—Å—Ç–≤–∏–π (–Ω–∞–∂–º–∏—Ç–µ –Ω—É–∂–Ω—É—é –±–∞—Ç—Ç–æ–Ω): \n1 - –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ'
                                   f' —Ñ–∞–π–ª–∞ —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º –∏ —Ç–µ–∫—Å—Ç–æ–º –∑–∞–º–µ—Ç–∫–∏.\n2 - –¥–ª—è –≤—ã–≤–æ–¥–∞ –Ω–∞ —ç–∫—Ä–∞–Ω —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ'
                                   f' –∑–∞–¥–∞–Ω–Ω–æ–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∑–∞–º–µ—Ç–∫–∏.\n3 - –¥–ª—è –≤—ã–≤–æ–¥–∞ –Ω–∞ —ç–∫—Ä–∞–Ω —Å–æ–¥–µ—Ä–∂–∏–º–æ–≥–æ –∑–∞–ø—Ä–∞—à–∏–≤–∞–µ–º–æ–π'
                                   f' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∑–∞–º–µ—Ç–∫–∏ –∏ –≤–≤–æ–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –Ω–æ–≤–æ–π –∑–∞–º–µ—Ç–∫–∏.\n4 - –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è —É–∫–∞–∑–∞–Ω–Ω–æ–π'
                                   f' –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º –∑–∞–º–µ—Ç–∫–∏.\n5 - –¥–ª—è —É–ø–æ—Ä—è–¥–æ—á–∏–≤–∞–Ω–∏—è –∑–∞–º–µ—Ç–æ–∫ –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å–∏–º–≤–æ–ª–æ–≤ –≤ —Å–∞–º–∏—Ö'
                                   f' –∑–∞–º–µ—Ç–∫–∞—Ö.</i>', \
                                    parse_mode='html', reply_markup=markup)

#–æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–µ–π—Å—Ç–≤–∏—è –∫–Ω–æ–ø–æ–∫
@bot.callback_query_handler(func=lambda call: True)
def handle(call):
    if call.data == 'bt1':
        create_note_handler(call)
    if call.data == 'bt2':
        read_note_handler(call)
    if call.data == 'bt3':
        edit_note_handler(call)
    if call.data == 'bt4':
        delete_note_handler(call)
    if call.data == 'bt5':
        display_sorted_notes_handler(call)
    if call.data == 'hlp':
        bot.answer_callback_query(callback_query_id=call.id, text='–ù–∞–∂–∞—Ç–∞ –∫–Ω–æ–ø–∫–∞ –ø–æ–º–æ—â–∏.üòâ', show_alert=True)
        bot.send_message(call.message.chat.id, '–í–∞–º –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω –±–æ—Ç –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∑–∞–º–µ—Ç–∫–∞–º–∏. –ï—Å–ª–∏ —á—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫, '
                                          '–ø–æ–ø—Ä–æ–±—É–π—Ç–µ —Å—Ç–∞—Ä—Ç–∞–Ω—É—Ç—å "/start"–µ—â–µ —Ä–∞–∑')

def build_note(note_text, note_name):
    # –ø—Ä–æ–≤–µ—Ä–∏–º —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ —Ñ–∞–π–ª —Å –∑–∞–¥–∞–Ω–Ω—ã–º –Ω–∞–∑–≤–∞–Ω–∏–µ–º, –µ—Å–ª–∏ –Ω–µ—Ç —Ç–æ —Å–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π,
    # –µ—Å–ª–∏ –¥–∞ - —Ç–æ –∑–∞–º–µ–Ω–∏–º –µ–≥–æ –Ω–∞ –Ω–æ–≤—É—é –∑–∞–º–µ—Ç–∫—É
        # try: —Ä–∞–Ω–µ–µ –±—ã–ª –±–ª–æ–∫  try:   except: –Ω–æ —è –Ω–µ –∑–Ω–∞—é –∫–∞–∫ –ø–æ—Å–ª–µ except –≤—ã–≤–µ—Å—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –Ω–µ–ø—Ä–µ–¥–≤–∏–¥–µ–Ω–Ω–æ–π –æ—à–∏–±–∫–µ
    try:
        file = open(f"{note_name}.txt", "w", encoding = "utf-8")
        file.write(note_text)
        file.close()
    except IOError:
            file = open(f"{note_name}.txt", "w+", encoding = "utf-8")
            file.write(note_text)
            file.close()
    #except:

def create_note_handler(call):
    # –≤–≤–µ–¥–µ–º –∏–º—è –∑–∞–º–µ—Ç–∫–∏ –∏ –∑–∞–ø–∏—à–µ–º –µ–µ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
    sent_name_zam = bot.send_message(call.message.chat.id, '–≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∑–∞–º–µ—Ç–∫–∞–º–∏: ')
    bot.register_next_step_handler(sent_name_zam, write_name_zam)
def write_name_zam(message):
    global note_name # –æ–±—ä—è–≤–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é "note_name" –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é
    note_name = message.text
    forbidden_symbols = "\\|/*<>?:"
    pattern = '[{0}]'.format(forbidden_symbols)
    if (re.search(pattern, note_name)):  # –Ω–∞–±–æ—Ä –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã—Ö —Å–∏–º–≤–æ–ª–æ–≤ —Å–∏–º–≤–æ–ª–æ–≤ –¥–ª—è Windows
        bot.send_message(message.chat.id, '–≤—ã –≤–≤–µ–ª–∏ –Ω–µ–¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã –≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞. –°—Ç–∞—Ä—Ç–∞–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ "/start".')
    else:
        bot.send_message(message.chat.id, '–≤ –Ω–∞–∑–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–∞ –¥–æ–ø—É—Å—Ç–∏–º—ã–µ —Å–∏–º–≤–æ–ª—ã, –æ—Ç–ª–∏—á–Ω–æ')
        # –≤–≤–µ–¥–µ–º —Ç–µ–∫—Å—Ç –∑–∞–º–µ—Ç–∫–∏ –∏ –∑–∞–ø–∏—à–µ–º –µ–≥–æ –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é
        sent_text_zam = bot.send_message(message.chat.id, '–≤–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –∑–∞–º–µ—Ç–∫–∏: ')
        bot.register_next_step_handler(sent_text_zam, write_text_zam)
    return note_name
def write_text_zam(message):
    global note_text # –æ–±—ä—è–≤–∏–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é "note_text" –≤ –≥–ª–æ–±–∞–ª—å–Ω—É—é
    note_text = message.text
    build_note(note_text, note_name)
    return note_text

def read_note_handler(call):
    # –ø–æ–∏—Å–∫ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ñ–∞–π–ª–∞ —Å –∑–∞–º–µ—Ç–∫–∞–º–∏ –∏ –≤—ã–≤–æ–¥ —Ç–µ–∫—Å—Ç–∞ –∑–∞–º–µ—Ç–∫–∏
    note_name_read = bot.send_message(call.message.chat.id, '–≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∑–∞–º–µ—Ç–∫–∞–º–∏: ')
    bot.register_next_step_handler(note_name_read, read_note_message)
def read_note_message(message):
    note_name_for_read = message.text
    try:
        path = f"{note_name_for_read}.txt"
        if os.path.isfile(path):
            with open(f"{note_name_for_read}.txt", 'r') as file:
                lines = file.read()
                note_name_for_read.close()
            bot.send_message(message.chat.id, f'—ç—Ç–æ —Å–∞–º —Ç–µ–∫—Å—Ç –¥–∞–Ω–Ω–æ–π –∑–∞–º–µ—Ç–∫–∏: {lines}')
        else:
            bot.send_message(message.chat.id, '—Å–æ—Ä—è–Ω, —Ç–∞–∫–∞—è –∑–∞–º–µ—Ç–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°—Ç–∞—Ä—Ç–∞–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ "/start".')
    except:
        bot.send_message(message.chat.id, "–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ '—á—Ç–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏' –ø—Ä–æ—à–ª–æ –Ω–µ—É–¥–∞—á–Ω–æ")

def edit_note_handler(call):
    # –ø–æ–∏—Å–∫ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ñ–∞–π–ª–∞ —Å –∑–∞–º–µ—Ç–∫–∞–º–∏ –∏ –≤–≤–æ–¥ –Ω–æ–≤–æ–π –∑–∞–º–µ—Ç–∫–∏ –≤ –¥–∞–Ω–Ω—ã–π —Ñ–∞–π–ª
    note_name_edit = bot.send_message(call.message.chat.id, '–≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∑–∞–º–µ—Ç–∫–∞–º–∏: ')
    bot.register_next_step_handler(note_name_edit, edit_note_message)
def edit_note_message(message):
    global note_name_for_edit
    note_name_for_edit = message.text
    path = f"{note_name_for_edit}.txt"
    if not os.path.isfile(path):
        bot.send_message(message.chat.id, '—Å–æ—Ä—è–Ω, —Ç–∞–∫–∞—è –∑–∞–º–µ—Ç–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°—Ç–∞—Ä—Ç–∞–Ω–∏—Ç–µ –∑–∞–Ω–æ–≤–æ "/start".')
    else:
        bot.send_message(message.chat.id, '–¢–∞–∫–æ–π —Ñ–∞–π–ª —Å –∑–∞–º–µ—Ç–∫–∞–º–∏ —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç! ')
        #note_text_new = open(f"{note_name_for_edit}.txt", "w+")
        note_text_edit_new = bot.send_message(message.chat.id, '–í–≤–µ–¥–∏—Ç–µ –Ω–æ–≤—É—é –∑–∞–º–µ—Ç–∫—É –≤ —ç—Ç–æ—Ç —Ñ–∞–π–ª: ')
        bot.register_next_step_handler(note_text_edit_new, edit_note_message_new)
def edit_note_message_new(message):
    note_text_for_edit_new = message.text
    note_text_new = open(f"{note_name_for_edit}.txt", "w+")
    note_text_new.write(note_text_for_edit_new)
    note_text_new.close()
    bot.send_message(message.chat.id, f'–ù–æ–≤–∞—è –∑–∞–º–µ—Ç–∫–∞ {note_name_for_edit} —Å–æ–∑–¥–∞–Ω–∞.')

def delete_note_handler(call):
    # –ø–æ–∏—Å–∫ –∑–∞–¥–∞–Ω–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º —Ñ–∞–π–ª–∞ —Å –∑–∞–º–µ—Ç–∫–∞–º–∏ –∏ –µ–≥–æ —É–¥–∞–ª–µ–Ω–∏–µ
    note_name_delete = bot.send_message(call.message.chat.id, '–≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ñ–∞–π–ª–∞ —Å –∑–∞–º–µ—Ç–∫–∞–º–∏: ')
    bot.register_next_step_handler(note_name_delete, delete_note_message)
def delete_note_message(message):
    note_name_for_delete = message.text
    try:
        path = f"{note_name_for_delete}.txt"
        if os.path.isfile(path):
            os.remove(f"{note_name_for_delete}.txt")
            bot.send_message(message.chat.id, '–§–∞–π–ª —Å –∑–∞–º–µ—Ç–∫–∞–º–∏ —É–¥–∞–ª–µ–Ω!')
        else:
            bot.send_message(message.chat.id, '—Å–æ—Ä—è–Ω, —Ç–∞–∫–∞—è –∑–∞–º–µ—Ç–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞')
    except:
        bot.send_message(message.chat.id, "–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ '—É–¥–∞–ª–µ–Ω–∏–µ –∑–∞–º–µ—Ç–∫–∏' –ø—Ä–æ—à–ª–æ –Ω–µ—É–¥–∞—á–Ω–æ")

def display_sorted_notes_handler(call):
    # –≤—ã–≤–æ–¥ –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–æ—Ä—è–¥–∫–µ —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤ –≤ –Ω–∏—Ö
    try:
        notes = [note for note in os.listdir() if note.endswith(".txt")]
        sorted_notes = sorted(notes, key=len)
        bot.send_message(call.message.chat.id,f'—ç—Ç–æ —Å–ø–∏—Å–æ–∫ –∑–∞–º–µ—Ç–æ–∫ —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–π –ø–æ –Ω–∞–∑–≤–∞–Ω–∏—é: \n {sorted_notes}')
        sorted_list = sorted(notes, key=lambda n: len(open(n, 'r').read()))
        bot.send_message(call.message.chat.id,f'\n—ç—Ç–æ —Å–ø–∏—Å–æ–∫ –∑–∞–º–µ—Ç–æ–∫ —É–ø–æ—Ä—è–¥–æ—á–µ–Ω–Ω—ã–π –ø–æ –∫–æ–ª–∏—á–µ—Å—Ç–≤—É —Å–∏–º–≤–æ–ª–æ–≤ –≤ –Ω–∏—Ö: \n {sorted_list}')
    except:
        bot.send_message(call.message.chat.id,"–ü—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ '–≤—ã–≤–æ–¥ –≤—Å–µ—Ö –∑–∞–º–µ—Ç–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –ø–æ—Ä—è–¥–∫–µ —É–≤–µ–ª–∏—á–µ–Ω–∏—è —Å–∏–º–≤–æ–ª–æ–≤ –≤ –Ω–∏—Ö' –ø—Ä–æ—à–ª–æ –Ω–µ—É–¥–∞—á–Ω–æ")

bot.infinity_polling()
